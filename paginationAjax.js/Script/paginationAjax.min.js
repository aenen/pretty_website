!function (y) { y.fn.paginationAjax = function (o, l, a) { if (!o || "string" != typeof o) return console.error('Необхідний параметр {string} "pageDataUrl". Вказати URL сторінки з даними.'), this; if (!l || "number" != typeof l) return console.error('Необхідний параметр {number} "totalPages". Вказати загальну кількість сторінок.'), this; if (!a || "object" != typeof a) return console.error('Необхідний параметр {object} "options". Вказати об\'єкт з налаштуваннями (він може бути пустим).'), this; var u = this, f = { allPages: { create: function (a, e) { if (y(u).empty(), e <= 1) return !1; for (var i = y("<ul/>", { class: "pagination" }).css("display", "block"), t = y("<a/>", { class: "page", "data-page": 1 }).on("click", h), n = 1; n <= e; n++) { var o = t.clone(!0).attr("data-page", n).text(n); i.append(y("<li/>").append(o)) } i.find("a[data-page='" + a + "']").parent("li").addClass("active"), y(u).append(i), v.loadMoreButton && y("<button/>", { class: "btn btn-lg btn-primary", id: "load-more", text: c[v.language].loadMore }).on("click", b).insertBefore(u) }, afterLoadPage: function (a) { var e = y("ul.pagination > li > a[data-page='" + a + "']"); y("ul.pagination > li.active").removeClass("active"), y(e).parent().addClass("active"), v.loadMoreButton && (+a === l ? y("#load-more").hide() : y("#load-more").show()) }, afterLoadMore: function (a) { y("ul.pagination > li.active").next().addClass("active"), +a === l && y("#load-more").hide() } }, allPagesShrink: { data: { prevWidth: y(u).width() }, create: function (a, e) { if (y(u).empty(), e <= 1) return !1; var o = y("<ul/>", { class: "pagination" }).css("display", "block"), l = y("<a/>", { class: "page", "data-page": 1 }).on("click", h), r = y("<li/>").append(y("<div/>", { class: "dropup btn-group", style: "display:block" }).append(y("<button/>", { class: "btn dropdown-toggle", type: "button", "data-toggle": "dropdown", text: "..." }))), i = v.visiblePagesCount, t = e, n = e; e <= i ? i = e : i % 2 == 0 ? (t = i / 2 - 1, n = i / 2) : t = n = parseInt(i / 2); var p = 0 < a - t ? a - t : 1, d = a + n < e ? a + n : e; i < e && (p = (d = a - p < t ? d + (t - a + 1) : d) - a < n ? p - (n - (d - a)) : p), 1 < a && y("<li/>").append(l.clone(!0).attr("data-page", a - 1).addClass("page-nav page-prev").text("<")).appendTo(o), g(1, p); for (var s = p; s <= d; s++)y("<li/>").append(l.clone(!0).attr("data-page", s).text(s)).appendTo(o); function g(a, e) { for (var i = y("<ul/>", { class: "dropdown-menu" }), t = a; t < e; t++)i.append(y("<li/>").append(l.clone(!0).attr("data-page", t).text(t))); var n = r.clone(!0); n.appendTo(o).find("div.dropup").append(i), n.find(i).children("li").length || n.hide() } g(d + 1, e + 1), a < e && y("<li/>").append(l.clone(!0).attr("data-page", a + 1).addClass("page-nav page-next").text(">")).appendTo(o), o.find("a[data-page='" + a + "']").parent("li").addClass("active"), o.appendTo(u), v.loadMoreButton && a !== e && y("<button/>", { class: "btn btn-lg btn-primary", id: "load-more", text: c[v.language].loadMore }).on("click", b).insertBefore(y(u).children("ul.pagination")), v.paginationStyleFlexible && (y(window).off("resize", f[v.paginationStyle].resize), y(window).on("resize", f[v.paginationStyle].resize), y(u).trigger("resize", [!0])) }, resize: function (a, e) { e = void 0 !== e && e; var i = y(u).width(); if (f.allPagesShrink.data.prevWidth === i && !e) return !1; var n = y(u).find("> ul.pagination > li:visible > a:not(.page-nav)").parent("li:visible"), o = y(u).find("> ul.pagination > li:visible"), l = y(u).find("> ul.pagination > li.active:visible").last(), r = y("ul.pagination li:has(div.dropup)").first(), p = y("ul.pagination li:has(div.dropup)").last(); function t() { if (o.last().position().top > o.first().position().top) for (; o.last().position().top > o.first().position().top && 1 !== n.length;) { var a = l.prevAll("li:has(> a:not(.page-nav))"), e = l.nextAll("li:has(> a:not(.page-nav))"), i = e.length <= a.length; i ? l.is(n.first()) || r.show().find("ul").append(n.first()) : l.is(n.last()) || p.show().find("ul").prepend(n.last()), n = y(u).find("> ul.pagination > li:visible > a:not(.page-nav)").parent("li:visible"), o = y(u).find("> ul.pagination > li:visible") } } function d() { for (; r.find("ul > li").length || p.find("ul > li").length;) { var a = l.prevAll("li:has(> a:not(.page-nav))"), e = l.nextAll("li:has(> a:not(.page-nav))"), i = e.length > a.length; if (i = !(i = !(i && !r.find("ul > li").length) && i) && !p.find("ul > li").length || i) { var t = r.find("ul > li").last().insertBefore(n.first()); if ((o = y(u).find("> ul.pagination > li:visible")).last().position().top > o.first().position().top) { r.find("ul").append(t); break } r.find("ul > li").length || r.hide() } else { var t = p.find("ul > li").first().insertAfter(n.last()); if ((o = y(u).find("> ul.pagination > li:visible")).last().position().top > o.first().position().top) { p.find("ul").prepend(t); break } p.find("ul > li").length || p.hide() } n = y(u).find("> ul.pagination > li:visible > a:not(.page-nav)").parent("li:visible") } } e && (d(), t()), f.allPagesShrink.data.prevWidth > i ? t() : d(), f.allPagesShrink.data.prevWidth = i, v.visiblePagesCount = n.length }, afterLoadPage: function (a) { f[v.paginationStyle].create(a, l) }, afterLoadMore: function (a) { var e = v.visiblePagesCount, i = l; l <= e ? e = l : i = e % 2 == 0 ? e / 2 - 1 : parseInt(e / 2); var t = y("ul.pagination > li > a.page:not(.page-nav)").parent("li"); if (i + 1 < a) { var n = y("ul.pagination li:has(div.dropup)").last(); n.find("ul > li").first().insertAfter(t.last()), t = y("ul.pagination > li > a.page:not(.page-nav)").parent("li"), n.find("ul.dropdown-menu li").length || n.hide(), t.length > e && y("ul.pagination li:has(div.dropup)").first().show().find("ul").append(t.first()) } y("ul.pagination > li > a:not(.page-nav)[data-page='" + a + "']").parent("li").addClass("active"), y("ul.pagination > li a.page-next").attr("data-page", a + 1), +a === l && (y("#load-more").hide(), y("ul.pagination > li a.page-next").parent("li").hide()), v.paginationStyleFlexible && y(u).trigger("resize", [!0]) } } }, c = { "uk-UA": { loadMore: "Завантажити ще" }, "ru-RU": { loadMore: "Загрузить еще" }, "en-US": { loadMore: "Load more" } }, e = { dataElementSelector: "#pageData", urlParameters: {}, language: "uk-UA", beforeLoadPage: y.noop, afterLoadPageSuccess: y.noop, afterLoadPageError: y.noop, loadMoreButton: !1, beforeLoadMore: y.noop, afterLoadMoreSuccess: y.noop, afterLoadMoreError: y.noop, dontLoadActiveOrDisabledPage: !0, paginationStyle: "allPages", paginationStyleFlexible: !1, visiblePagesCount: 5 }, v = y.extend({}, e, a); return f.hasOwnProperty(v.paginationStyle) ? f[v.paginationStyle].create(1, l) : console.error("Стилю з назвою " + v.paginationStyle + " не існує."), this; function h(a) { if (v.dontLoadActiveOrDisabledPage && (y(this).parent().hasClass("active") || y(this).parent().hasClass("disabled"))) return !1; var e = y(this).data("page"); v.beforeLoadPage(), i(e, !1, function () { f[v.paginationStyle].afterLoadPage(e), v.afterLoadPageSuccess() }, v.afterLoadPageError) } function b(a) { if (v.dontLoadActiveOrDisabledPage && (y(this).hasClass("active") || y(this).hasClass("disabled"))) return !1; var e = y("ul.pagination > li.active > a").last().data("page") + 1; v.beforeLoadMore(), i(e, !0, function () { f[v.paginationStyle].afterLoadMore(e), v.afterLoadMoreSuccess() }, v.afterLoadMoreError) } function i(a, e, i, t) { i = void 0 === i ? y.noop : i, t = void 0 === t ? y.noop : t; var n = y.extend({ page: a }, v.urlParameters); y.ajax({ type: "GET", url: o + "?" + y.param(n), success: function (a) { e || y(v.dataElementSelector).empty(), y(v.dataElementSelector).append(a), i() }, error: function () { t() } }) } } }(jQuery);